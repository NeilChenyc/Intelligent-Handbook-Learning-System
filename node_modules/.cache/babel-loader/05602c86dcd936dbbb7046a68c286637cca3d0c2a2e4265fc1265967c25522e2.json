{"ast":null,"code":"var _jsxFileName = \"/Users/a99/localDocuments/codeBase/ideaWorkplace/5620/src/contexts/AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\n\n// 创建认证上下文\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// 自定义Hook用于使用认证上下文\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\n// 认证提供者组件\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // 组件挂载时检查本地存储的用户信息\n  useEffect(() => {\n    const checkAuthStatus = () => {\n      try {\n        const storedUser = localStorage.getItem('userInfo');\n        if (storedUser) {\n          const userInfo = JSON.parse(storedUser);\n          setUser(userInfo);\n        }\n      } catch (error) {\n        console.error('Error parsing stored user info:', error);\n        localStorage.removeItem('userInfo');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    checkAuthStatus();\n  }, []);\n\n  // 登录函数\n  const login = userInfo => {\n    setUser(userInfo);\n    localStorage.setItem('userInfo', JSON.stringify(userInfo));\n  };\n\n  // 登出函数\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('userInfo');\n  };\n\n  // 检查用户是否已登录\n  const isAuthenticated = () => {\n    return user !== null;\n  };\n\n  // 检查用户是否为管理员\n  const isAdmin = () => {\n    return user && user.role === 'admin';\n  };\n\n  // 检查用户是否为学员\n  const isStudent = () => {\n    return user && user.role === 'student';\n  };\n\n  // 获取用户权限\n  const getUserPermissions = () => {\n    if (!user) return [];\n    const basePermissions = ['dashboard', 'learning', 'progress'];\n    if (user.role === 'admin') {\n      return [...basePermissions, 'compliance', 'user-management', 'system-settings'];\n    } else if (user.role === 'student') {\n      return basePermissions;\n    }\n    return [];\n  };\n\n  // 检查用户是否有特定权限\n  const hasPermission = permission => {\n    const permissions = getUserPermissions();\n    return permissions.includes(permission);\n  };\n  const value = {\n    user,\n    isLoading,\n    login,\n    logout,\n    isAuthenticated,\n    isAdmin,\n    isStudent,\n    getUserPermissions,\n    hasPermission\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"YajQB7LURzRD+QP5gw0+K2TZIWA=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","isLoading","setIsLoading","checkAuthStatus","storedUser","localStorage","getItem","userInfo","JSON","parse","error","console","removeItem","login","setItem","stringify","logout","isAuthenticated","isAdmin","role","isStudent","getUserPermissions","basePermissions","hasPermission","permission","permissions","includes","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/a99/localDocuments/codeBase/ideaWorkplace/5620/src/contexts/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\n// 创建认证上下文\nconst AuthContext = createContext();\n\n// 自定义Hook用于使用认证上下文\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\n// 认证提供者组件\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // 组件挂载时检查本地存储的用户信息\n  useEffect(() => {\n    const checkAuthStatus = () => {\n      try {\n        const storedUser = localStorage.getItem('userInfo');\n        if (storedUser) {\n          const userInfo = JSON.parse(storedUser);\n          setUser(userInfo);\n        }\n      } catch (error) {\n        console.error('Error parsing stored user info:', error);\n        localStorage.removeItem('userInfo');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    checkAuthStatus();\n  }, []);\n\n  // 登录函数\n  const login = (userInfo) => {\n    setUser(userInfo);\n    localStorage.setItem('userInfo', JSON.stringify(userInfo));\n  };\n\n  // 登出函数\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('userInfo');\n  };\n\n  // 检查用户是否已登录\n  const isAuthenticated = () => {\n    return user !== null;\n  };\n\n  // 检查用户是否为管理员\n  const isAdmin = () => {\n    return user && user.role === 'admin';\n  };\n\n  // 检查用户是否为学员\n  const isStudent = () => {\n    return user && user.role === 'student';\n  };\n\n  // 获取用户权限\n  const getUserPermissions = () => {\n    if (!user) return [];\n    \n    const basePermissions = ['dashboard', 'learning', 'progress'];\n    \n    if (user.role === 'admin') {\n      return [...basePermissions, 'compliance', 'user-management', 'system-settings'];\n    } else if (user.role === 'student') {\n      return basePermissions;\n    }\n    \n    return [];\n  };\n\n  // 检查用户是否有特定权限\n  const hasPermission = (permission) => {\n    const permissions = getUserPermissions();\n    return permissions.includes(permission);\n  };\n\n  const value = {\n    user,\n    isLoading,\n    login,\n    logout,\n    isAuthenticated,\n    isAdmin,\n    isStudent,\n    getUserPermissions,\n    hasPermission\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}